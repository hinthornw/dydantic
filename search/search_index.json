{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dydantic","text":"<p>Dydantic is a Python library for dynamically generating Pydantic models from JSON Schema. It provides a convenient way to create Pydantic models on-the-fly from general user-defined schemas.</p> <p> </p>"},{"location":"#reference","title":"Reference","text":"<p>The main function in this module is <code>create_model_from_schema</code>, which takes a JSON schema as input and returns a dynamically created Pydantic model class. The function supports various features such as nested objects, referenced definitions, custom configurations, custom base classes, custom validators, and more.</p> <p>Example usage:</p> <pre><code>&gt;&gt;&gt; from dydantic import create_model_from_schema\n&gt;&gt;&gt; json_schema = {\n...     \"title\": \"Person\",\n...     \"type\": \"object\",\n...     \"properties\": {\n...         \"name\": {\"type\": \"string\"},\n...         \"age\": {\"type\": \"integer\"},\n...     },\n...     \"required\": [\"name\"],\n... }\n&gt;&gt;&gt; Person = create_model_from_schema(json_schema)\n&gt;&gt;&gt; person = Person(name=\"John\", age=30)\n&gt;&gt;&gt; person\nPerson(name='John', age=30)\n</code></pre> <p>The module also includes helper functions such as <code>_json_schema_to_pydantic_field</code> and <code>_json_schema_to_pydantic_type</code> that are used internally by <code>create_model_from_schema</code> to convert JSON schema definitions to Pydantic fields and types.</p> <p>Functions:</p> Name Description <code>- create_model_from_schema</code> <p>Create a Pydantic model from a JSON schema.</p> Helper Functions <ul> <li>_json_schema_to_pydantic_field: Convert a JSON schema field to a Pydantic field.</li> <li>_json_schema_to_pydantic_type: Convert a JSON schema type to a Pydantic type.</li> </ul> <p>For more detailed information and examples, refer to the docstring of the <code>create_model_from_schema</code> function.</p> <p>handler: python options: selection: docstring_style: google rendering: heading_level: 3 show_root_toc_entry: false members: - create_model_from_schema</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions to dydantic are welcome! If you find any issues or have suggestions for improvements, please open an issue or submit a pull request on the GitHub repository: https://github.com/hinthornw/dydantic</p>"},{"location":"#license","title":"License","text":"<p>dydantic is open-source software licensed under the MIT License.</p>"}]}