[tool.poetry]
name = "dydantic"
version = "0.0.6"
description = "Dynamically generate pydantic models from JSON schema."
authors = ["William Fu-Hinthorn <13333726+hinthornw@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2"
email-validator = { version = "^2.1", optional = true }

[tool.poetry.extras]
email = ["email-validator"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.5"
black = "^24.3.0"
mypy = "^1.9.0"


[tool.poetry.group.test.dependencies]
poethepoet = "^0.25.0"
pytest = "^8.1.1"

[tool.poetry.group.email.dependencies]
email-validator = "^2.1.0"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.17"
mkdocstrings = "^0.24.3"
mkdocstrings-python = "^1.9.2"
mkdocs-redirects = "^1.2.1"
mkdocs-minify-plugin = "^0.8.0"
mkdocs-rss-plugin = "^1.12.1"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
ruff = "ruff"
black = "black"
mypy = "mypy"
format = ["ruff check --fix .", "black .", "ruff format ."]
lint = ["ruff check .", "mypy ."]
pytest = "poetry run pytest"
test = "poetry run pytest tests"
doctest = "pytest --doctest-modules dydantic"

mkdocs = "poetry run mkdocs"
build-docs = "mkdocs build --clean -f docs/mkdocs.yml"

serve-docs = ["build-docs", "mkdocs serve -f docs/mkdocs.yml"]
